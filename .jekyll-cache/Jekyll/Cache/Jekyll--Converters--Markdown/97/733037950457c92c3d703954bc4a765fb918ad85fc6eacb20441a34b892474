I"•<p>Another list of things I learned in the past 2023.</p>

<!--more-->
<h3 id="python-parallelism">Python parallelism</h3>

<p>| type | memory | start | run | kernel | obs
<strong>__</strong><strong>__</strong><strong>__</strong><strong>__</strong><strong>__</strong><strong>__</strong><strong>__</strong>__
| coroutines | very low | very fast | slow | main thread | cooperative concurrency, non-preemptive multitasking. Using yield in generators or async/await tasks pass control between themselves|
| threading  | low      | fast      | slow | threads     | preemptive concurrency. Due to GIL not real multitasking (parallelism). As coroutines good only for non-blocking I/O (network or disk) or external function calls.|</p>

<table>
  <thead>
    <tr>
      <th>Priority apples</th>
      <th>Second priority</th>
      <th>Third priority</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>ambrosia</td>
      <td>gala</td>
      <td>red delicious</td>
    </tr>
    <tr>
      <td>pink lady</td>
      <td>jazz</td>
      <td>macintosh</td>
    </tr>
    <tr>
      <td>honeycrisp</td>
      <td>granny smith</td>
      <td>fuji</td>
    </tr>
  </tbody>
</table>
:ET